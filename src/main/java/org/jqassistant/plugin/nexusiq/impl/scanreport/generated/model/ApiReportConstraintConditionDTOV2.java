/*
 * Sonatype IQ Server
 * This documents the available APIs into [Sonatype IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management).
 *
 * The version of the OpenAPI document: 164
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.jqassistant.plugin.nexusiq.impl.scanreport.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * ApiReportConstraintConditionDTOV2
 */
@JsonPropertyOrder({
    ApiReportConstraintConditionDTOV2.JSON_PROPERTY_CONDITION_REASON,
    ApiReportConstraintConditionDTOV2.JSON_PROPERTY_CONDITION_SUMMARY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-26T13:18:09.990569236+02:00[Europe/Berlin]")
public class ApiReportConstraintConditionDTOV2 {
    public static final String JSON_PROPERTY_CONDITION_REASON = "conditionReason";
    public static final String JSON_PROPERTY_CONDITION_SUMMARY = "conditionSummary";
    private String conditionReason;
    private String conditionSummary;

    public ApiReportConstraintConditionDTOV2() {
    }

    public ApiReportConstraintConditionDTOV2 conditionReason(String conditionReason) {
        this.conditionReason = conditionReason;
        return this;
    }

    /**
     * Get conditionReason
     *
     * @return conditionReason
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CONDITION_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getConditionReason() {
        return conditionReason;
    }


    @JsonProperty(JSON_PROPERTY_CONDITION_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConditionReason(String conditionReason) {
        this.conditionReason = conditionReason;
    }


    public ApiReportConstraintConditionDTOV2 conditionSummary(String conditionSummary) {
        this.conditionSummary = conditionSummary;
        return this;
    }

    /**
     * Get conditionSummary
     *
     * @return conditionSummary
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CONDITION_SUMMARY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getConditionSummary() {
        return conditionSummary;
    }


    @JsonProperty(JSON_PROPERTY_CONDITION_SUMMARY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConditionSummary(String conditionSummary) {
        this.conditionSummary = conditionSummary;
    }


    /**
     * Return true if this ApiReportConstraintConditionDTOV2 object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ApiReportConstraintConditionDTOV2 apiReportConstraintConditionDTOV2 = (ApiReportConstraintConditionDTOV2) o;
        return Objects.equals(this.conditionReason, apiReportConstraintConditionDTOV2.conditionReason) &&
            Objects.equals(this.conditionSummary, apiReportConstraintConditionDTOV2.conditionSummary);
    }

    @Override
    public int hashCode() {
        return Objects.hash(conditionReason, conditionSummary);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ApiReportConstraintConditionDTOV2 {\n");
        sb.append("    conditionReason: ").append(toIndentedString(conditionReason)).append("\n");
        sb.append("    conditionSummary: ").append(toIndentedString(conditionSummary)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

