/*
 * Sonatype IQ Server
 * This documents the available APIs into [Sonatype IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management).
 *
 * The version of the OpenAPI document: 164
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.jqassistant.plugin.nexusiq.impl.scanreport.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ComponentFact
 */
@JsonPropertyOrder({
    ComponentFact.JSON_PROPERTY_COMPONENT_IDENTIFIER,
    ComponentFact.JSON_PROPERTY_CONSTRAINT_FACTS,
    ComponentFact.JSON_PROPERTY_DISPLAY_NAME,
    ComponentFact.JSON_PROPERTY_HASH,
    ComponentFact.JSON_PROPERTY_PATHNAMES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-26T13:18:09.990569236+02:00[Europe/Berlin]")
public class ComponentFact {
    public static final String JSON_PROPERTY_COMPONENT_IDENTIFIER = "componentIdentifier";
    public static final String JSON_PROPERTY_CONSTRAINT_FACTS = "constraintFacts";
    public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
    public static final String JSON_PROPERTY_HASH = "hash";
    public static final String JSON_PROPERTY_PATHNAMES = "pathnames";
    private ComponentIdentifier componentIdentifier;
    private List<ConstraintFact> constraintFacts = null;
    private ComponentDisplayName displayName;
    private String hash;
    private List<String> pathnames = null;

    public ComponentFact() {
    }

    public ComponentFact componentIdentifier(ComponentIdentifier componentIdentifier) {
        this.componentIdentifier = componentIdentifier;
        return this;
    }

    /**
     * Get componentIdentifier
     *
     * @return componentIdentifier
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_COMPONENT_IDENTIFIER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ComponentIdentifier getComponentIdentifier() {
        return componentIdentifier;
    }


    @JsonProperty(JSON_PROPERTY_COMPONENT_IDENTIFIER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setComponentIdentifier(ComponentIdentifier componentIdentifier) {
        this.componentIdentifier = componentIdentifier;
    }


    public ComponentFact constraintFacts(List<ConstraintFact> constraintFacts) {
        this.constraintFacts = constraintFacts;
        return this;
    }

    public ComponentFact addConstraintFactsItem(ConstraintFact constraintFactsItem) {
        if (this.constraintFacts == null) {
            this.constraintFacts = new ArrayList<>();
        }
        this.constraintFacts.add(constraintFactsItem);
        return this;
    }

    /**
     * Get constraintFacts
     *
     * @return constraintFacts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CONSTRAINT_FACTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<ConstraintFact> getConstraintFacts() {
        return constraintFacts;
    }


    @JsonProperty(JSON_PROPERTY_CONSTRAINT_FACTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConstraintFacts(List<ConstraintFact> constraintFacts) {
        this.constraintFacts = constraintFacts;
    }


    public ComponentFact displayName(ComponentDisplayName displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get displayName
     *
     * @return displayName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ComponentDisplayName getDisplayName() {
        return displayName;
    }


    @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDisplayName(ComponentDisplayName displayName) {
        this.displayName = displayName;
    }


    public ComponentFact hash(String hash) {
        this.hash = hash;
        return this;
    }

    /**
     * Get hash
     *
     * @return hash
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_HASH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getHash() {
        return hash;
    }


    @JsonProperty(JSON_PROPERTY_HASH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHash(String hash) {
        this.hash = hash;
    }


    public ComponentFact pathnames(List<String> pathnames) {
        this.pathnames = pathnames;
        return this;
    }

    public ComponentFact addPathnamesItem(String pathnamesItem) {
        if (this.pathnames == null) {
            this.pathnames = new ArrayList<>();
        }
        this.pathnames.add(pathnamesItem);
        return this;
    }

    /**
     * Get pathnames
     *
     * @return pathnames
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PATHNAMES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getPathnames() {
        return pathnames;
    }


    @JsonProperty(JSON_PROPERTY_PATHNAMES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPathnames(List<String> pathnames) {
        this.pathnames = pathnames;
    }


    /**
     * Return true if this ComponentFact object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ComponentFact componentFact = (ComponentFact) o;
        return Objects.equals(this.componentIdentifier, componentFact.componentIdentifier) &&
            Objects.equals(this.constraintFacts, componentFact.constraintFacts) &&
            Objects.equals(this.displayName, componentFact.displayName) &&
            Objects.equals(this.hash, componentFact.hash) &&
            Objects.equals(this.pathnames, componentFact.pathnames);
    }

    @Override
    public int hashCode() {
        return Objects.hash(componentIdentifier, constraintFacts, displayName, hash, pathnames);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ComponentFact {\n");
        sb.append("    componentIdentifier: ").append(toIndentedString(componentIdentifier)).append("\n");
        sb.append("    constraintFacts: ").append(toIndentedString(constraintFacts)).append("\n");
        sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
        sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
        sb.append("    pathnames: ").append(toIndentedString(pathnames)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

