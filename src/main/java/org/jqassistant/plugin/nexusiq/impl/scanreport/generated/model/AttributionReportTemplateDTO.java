/*
 * Sonatype IQ Server
 * This documents the available APIs into [Sonatype IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management).
 *
 * The version of the OpenAPI document: 164
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.jqassistant.plugin.nexusiq.impl.scanreport.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.time.OffsetDateTime;
import java.util.Objects;


/**
 * AttributionReportTemplateDTO
 */
@JsonPropertyOrder({
    AttributionReportTemplateDTO.JSON_PROPERTY_DOCUMENT_TITLE,
    AttributionReportTemplateDTO.JSON_PROPERTY_FOOTER,
    AttributionReportTemplateDTO.JSON_PROPERTY_HEADER,
    AttributionReportTemplateDTO.JSON_PROPERTY_ID,
    AttributionReportTemplateDTO.JSON_PROPERTY_INCLUDE_APPENDIX,
    AttributionReportTemplateDTO.JSON_PROPERTY_INCLUDE_INNER_SOURCE,
    AttributionReportTemplateDTO.JSON_PROPERTY_INCLUDE_SONATYPE_SPECIAL_LICENSES,
    AttributionReportTemplateDTO.JSON_PROPERTY_INCLUDE_STANDARD_LICENSE_TEXTS,
    AttributionReportTemplateDTO.JSON_PROPERTY_INCLUDE_TABLE_OF_CONTENTS,
    AttributionReportTemplateDTO.JSON_PROPERTY_LAST_UPDATED_AT,
    AttributionReportTemplateDTO.JSON_PROPERTY_TEMPLATE_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-26T13:18:09.990569236+02:00[Europe/Berlin]")
public class AttributionReportTemplateDTO {
    public static final String JSON_PROPERTY_DOCUMENT_TITLE = "documentTitle";
    public static final String JSON_PROPERTY_FOOTER = "footer";
    public static final String JSON_PROPERTY_HEADER = "header";
    public static final String JSON_PROPERTY_ID = "id";
    public static final String JSON_PROPERTY_INCLUDE_APPENDIX = "includeAppendix";
    public static final String JSON_PROPERTY_INCLUDE_INNER_SOURCE = "includeInnerSource";
    public static final String JSON_PROPERTY_INCLUDE_SONATYPE_SPECIAL_LICENSES = "includeSonatypeSpecialLicenses";
    public static final String JSON_PROPERTY_INCLUDE_STANDARD_LICENSE_TEXTS = "includeStandardLicenseTexts";
    public static final String JSON_PROPERTY_INCLUDE_TABLE_OF_CONTENTS = "includeTableOfContents";
    public static final String JSON_PROPERTY_LAST_UPDATED_AT = "lastUpdatedAt";
    public static final String JSON_PROPERTY_TEMPLATE_NAME = "templateName";
    private String documentTitle;
    private String footer;
    private String header;
    private String id;
    private Boolean includeAppendix;
    private Boolean includeInnerSource;
    private Boolean includeSonatypeSpecialLicenses;
    private Boolean includeStandardLicenseTexts;
    private Boolean includeTableOfContents;
    private OffsetDateTime lastUpdatedAt;
    private String templateName;

    public AttributionReportTemplateDTO() {
    }

    public AttributionReportTemplateDTO documentTitle(String documentTitle) {
        this.documentTitle = documentTitle;
        return this;
    }

    /**
     * Get documentTitle
     *
     * @return documentTitle
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DOCUMENT_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDocumentTitle() {
        return documentTitle;
    }


    @JsonProperty(JSON_PROPERTY_DOCUMENT_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDocumentTitle(String documentTitle) {
        this.documentTitle = documentTitle;
    }


    public AttributionReportTemplateDTO footer(String footer) {
        this.footer = footer;
        return this;
    }

    /**
     * Get footer
     *
     * @return footer
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_FOOTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getFooter() {
        return footer;
    }


    @JsonProperty(JSON_PROPERTY_FOOTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFooter(String footer) {
        this.footer = footer;
    }


    public AttributionReportTemplateDTO header(String header) {
        this.header = header;
        return this;
    }

    /**
     * Get header
     *
     * @return header
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_HEADER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getHeader() {
        return header;
    }


    @JsonProperty(JSON_PROPERTY_HEADER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHeader(String header) {
        this.header = header;
    }


    public AttributionReportTemplateDTO id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getId() {
        return id;
    }


    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }


    public AttributionReportTemplateDTO includeAppendix(Boolean includeAppendix) {
        this.includeAppendix = includeAppendix;
        return this;
    }

    /**
     * Get includeAppendix
     *
     * @return includeAppendix
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_INCLUDE_APPENDIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIncludeAppendix() {
        return includeAppendix;
    }


    @JsonProperty(JSON_PROPERTY_INCLUDE_APPENDIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIncludeAppendix(Boolean includeAppendix) {
        this.includeAppendix = includeAppendix;
    }


    public AttributionReportTemplateDTO includeInnerSource(Boolean includeInnerSource) {
        this.includeInnerSource = includeInnerSource;
        return this;
    }

    /**
     * Get includeInnerSource
     *
     * @return includeInnerSource
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_INCLUDE_INNER_SOURCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIncludeInnerSource() {
        return includeInnerSource;
    }


    @JsonProperty(JSON_PROPERTY_INCLUDE_INNER_SOURCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIncludeInnerSource(Boolean includeInnerSource) {
        this.includeInnerSource = includeInnerSource;
    }


    public AttributionReportTemplateDTO includeSonatypeSpecialLicenses(Boolean includeSonatypeSpecialLicenses) {
        this.includeSonatypeSpecialLicenses = includeSonatypeSpecialLicenses;
        return this;
    }

    /**
     * Get includeSonatypeSpecialLicenses
     *
     * @return includeSonatypeSpecialLicenses
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_INCLUDE_SONATYPE_SPECIAL_LICENSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIncludeSonatypeSpecialLicenses() {
        return includeSonatypeSpecialLicenses;
    }


    @JsonProperty(JSON_PROPERTY_INCLUDE_SONATYPE_SPECIAL_LICENSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIncludeSonatypeSpecialLicenses(Boolean includeSonatypeSpecialLicenses) {
        this.includeSonatypeSpecialLicenses = includeSonatypeSpecialLicenses;
    }


    public AttributionReportTemplateDTO includeStandardLicenseTexts(Boolean includeStandardLicenseTexts) {
        this.includeStandardLicenseTexts = includeStandardLicenseTexts;
        return this;
    }

    /**
     * Get includeStandardLicenseTexts
     *
     * @return includeStandardLicenseTexts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_INCLUDE_STANDARD_LICENSE_TEXTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIncludeStandardLicenseTexts() {
        return includeStandardLicenseTexts;
    }


    @JsonProperty(JSON_PROPERTY_INCLUDE_STANDARD_LICENSE_TEXTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIncludeStandardLicenseTexts(Boolean includeStandardLicenseTexts) {
        this.includeStandardLicenseTexts = includeStandardLicenseTexts;
    }


    public AttributionReportTemplateDTO includeTableOfContents(Boolean includeTableOfContents) {
        this.includeTableOfContents = includeTableOfContents;
        return this;
    }

    /**
     * Get includeTableOfContents
     *
     * @return includeTableOfContents
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_INCLUDE_TABLE_OF_CONTENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIncludeTableOfContents() {
        return includeTableOfContents;
    }


    @JsonProperty(JSON_PROPERTY_INCLUDE_TABLE_OF_CONTENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIncludeTableOfContents(Boolean includeTableOfContents) {
        this.includeTableOfContents = includeTableOfContents;
    }


    public AttributionReportTemplateDTO lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
        this.lastUpdatedAt = lastUpdatedAt;
        return this;
    }

    /**
     * Get lastUpdatedAt
     *
     * @return lastUpdatedAt
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LAST_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OffsetDateTime getLastUpdatedAt() {
        return lastUpdatedAt;
    }


    @JsonProperty(JSON_PROPERTY_LAST_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
        this.lastUpdatedAt = lastUpdatedAt;
    }


    public AttributionReportTemplateDTO templateName(String templateName) {
        this.templateName = templateName;
        return this;
    }

    /**
     * Get templateName
     *
     * @return templateName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TEMPLATE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTemplateName() {
        return templateName;
    }


    @JsonProperty(JSON_PROPERTY_TEMPLATE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTemplateName(String templateName) {
        this.templateName = templateName;
    }


    /**
     * Return true if this AttributionReportTemplateDTO object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AttributionReportTemplateDTO attributionReportTemplateDTO = (AttributionReportTemplateDTO) o;
        return Objects.equals(this.documentTitle, attributionReportTemplateDTO.documentTitle) &&
            Objects.equals(this.footer, attributionReportTemplateDTO.footer) &&
            Objects.equals(this.header, attributionReportTemplateDTO.header) &&
            Objects.equals(this.id, attributionReportTemplateDTO.id) &&
            Objects.equals(this.includeAppendix, attributionReportTemplateDTO.includeAppendix) &&
            Objects.equals(this.includeInnerSource, attributionReportTemplateDTO.includeInnerSource) &&
            Objects.equals(this.includeSonatypeSpecialLicenses, attributionReportTemplateDTO.includeSonatypeSpecialLicenses) &&
            Objects.equals(this.includeStandardLicenseTexts, attributionReportTemplateDTO.includeStandardLicenseTexts) &&
            Objects.equals(this.includeTableOfContents, attributionReportTemplateDTO.includeTableOfContents) &&
            Objects.equals(this.lastUpdatedAt, attributionReportTemplateDTO.lastUpdatedAt) &&
            Objects.equals(this.templateName, attributionReportTemplateDTO.templateName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(documentTitle, footer, header, id, includeAppendix, includeInnerSource, includeSonatypeSpecialLicenses, includeStandardLicenseTexts, includeTableOfContents, lastUpdatedAt, templateName);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AttributionReportTemplateDTO {\n");
        sb.append("    documentTitle: ").append(toIndentedString(documentTitle)).append("\n");
        sb.append("    footer: ").append(toIndentedString(footer)).append("\n");
        sb.append("    header: ").append(toIndentedString(header)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    includeAppendix: ").append(toIndentedString(includeAppendix)).append("\n");
        sb.append("    includeInnerSource: ").append(toIndentedString(includeInnerSource)).append("\n");
        sb.append("    includeSonatypeSpecialLicenses: ").append(toIndentedString(includeSonatypeSpecialLicenses)).append("\n");
        sb.append("    includeStandardLicenseTexts: ").append(toIndentedString(includeStandardLicenseTexts)).append("\n");
        sb.append("    includeTableOfContents: ").append(toIndentedString(includeTableOfContents)).append("\n");
        sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
        sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

