/*
 * Sonatype IQ Server
 * This documents the available APIs into [Sonatype IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management).
 *
 * The version of the OpenAPI document: 164
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.jqassistant.plugin.nexusiq.impl.scanreport.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * ConditionFact
 */
@JsonPropertyOrder({
    ConditionFact.JSON_PROPERTY_CONDITION_INDEX,
    ConditionFact.JSON_PROPERTY_CONDITION_TYPE_ID,
    ConditionFact.JSON_PROPERTY_REASON,
    ConditionFact.JSON_PROPERTY_REFERENCE,
    ConditionFact.JSON_PROPERTY_SUMMARY,
    ConditionFact.JSON_PROPERTY_TRIGGER_JSON
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-26T13:18:09.990569236+02:00[Europe/Berlin]")
public class ConditionFact {
    public static final String JSON_PROPERTY_CONDITION_INDEX = "conditionIndex";
    public static final String JSON_PROPERTY_CONDITION_TYPE_ID = "conditionTypeId";
    public static final String JSON_PROPERTY_REASON = "reason";
    public static final String JSON_PROPERTY_REFERENCE = "reference";
    public static final String JSON_PROPERTY_SUMMARY = "summary";
    public static final String JSON_PROPERTY_TRIGGER_JSON = "triggerJson";
    private Integer conditionIndex;
    private String conditionTypeId;
    private String reason;
    private TriggerReference reference;
    private String summary;
    private String triggerJson;

    public ConditionFact() {
    }

    public ConditionFact conditionIndex(Integer conditionIndex) {
        this.conditionIndex = conditionIndex;
        return this;
    }

    /**
     * Get conditionIndex
     *
     * @return conditionIndex
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CONDITION_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getConditionIndex() {
        return conditionIndex;
    }


    @JsonProperty(JSON_PROPERTY_CONDITION_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConditionIndex(Integer conditionIndex) {
        this.conditionIndex = conditionIndex;
    }


    public ConditionFact conditionTypeId(String conditionTypeId) {
        this.conditionTypeId = conditionTypeId;
        return this;
    }

    /**
     * Get conditionTypeId
     *
     * @return conditionTypeId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CONDITION_TYPE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getConditionTypeId() {
        return conditionTypeId;
    }


    @JsonProperty(JSON_PROPERTY_CONDITION_TYPE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConditionTypeId(String conditionTypeId) {
        this.conditionTypeId = conditionTypeId;
    }


    public ConditionFact reason(String reason) {
        this.reason = reason;
        return this;
    }

    /**
     * Get reason
     *
     * @return reason
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getReason() {
        return reason;
    }


    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReason(String reason) {
        this.reason = reason;
    }


    public ConditionFact reference(TriggerReference reference) {
        this.reference = reference;
        return this;
    }

    /**
     * Get reference
     *
     * @return reference
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_REFERENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TriggerReference getReference() {
        return reference;
    }


    @JsonProperty(JSON_PROPERTY_REFERENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReference(TriggerReference reference) {
        this.reference = reference;
    }


    public ConditionFact summary(String summary) {
        this.summary = summary;
        return this;
    }

    /**
     * Get summary
     *
     * @return summary
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SUMMARY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSummary() {
        return summary;
    }


    @JsonProperty(JSON_PROPERTY_SUMMARY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSummary(String summary) {
        this.summary = summary;
    }


    public ConditionFact triggerJson(String triggerJson) {
        this.triggerJson = triggerJson;
        return this;
    }

    /**
     * Get triggerJson
     *
     * @return triggerJson
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TRIGGER_JSON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTriggerJson() {
        return triggerJson;
    }


    @JsonProperty(JSON_PROPERTY_TRIGGER_JSON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTriggerJson(String triggerJson) {
        this.triggerJson = triggerJson;
    }


    /**
     * Return true if this ConditionFact object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConditionFact conditionFact = (ConditionFact) o;
        return Objects.equals(this.conditionIndex, conditionFact.conditionIndex) &&
            Objects.equals(this.conditionTypeId, conditionFact.conditionTypeId) &&
            Objects.equals(this.reason, conditionFact.reason) &&
            Objects.equals(this.reference, conditionFact.reference) &&
            Objects.equals(this.summary, conditionFact.summary) &&
            Objects.equals(this.triggerJson, conditionFact.triggerJson);
    }

    @Override
    public int hashCode() {
        return Objects.hash(conditionIndex, conditionTypeId, reason, reference, summary, triggerJson);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ConditionFact {\n");
        sb.append("    conditionIndex: ").append(toIndentedString(conditionIndex)).append("\n");
        sb.append("    conditionTypeId: ").append(toIndentedString(conditionTypeId)).append("\n");
        sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
        sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
        sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
        sb.append("    triggerJson: ").append(toIndentedString(triggerJson)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

