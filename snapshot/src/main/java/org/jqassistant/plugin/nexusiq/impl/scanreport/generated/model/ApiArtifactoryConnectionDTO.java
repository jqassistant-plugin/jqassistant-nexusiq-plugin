/*
 * Sonatype IQ Server
 * This documents the available APIs into [Sonatype IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management).
 *
 * The version of the OpenAPI document: 164
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.jqassistant.plugin.nexusiq.impl.scanreport.generated.model;

import com.fasterxml.jackson.annotation.*;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * ApiArtifactoryConnectionDTO
 */
@JsonPropertyOrder({
    ApiArtifactoryConnectionDTO.JSON_PROPERTY_ARTIFACTORY_CONNECTION_ID,
    ApiArtifactoryConnectionDTO.JSON_PROPERTY_BASE_URL,
    ApiArtifactoryConnectionDTO.JSON_PROPERTY_IS_ANONYMOUS,
    ApiArtifactoryConnectionDTO.JSON_PROPERTY_OWNER_ID,
    ApiArtifactoryConnectionDTO.JSON_PROPERTY_OWNER_TYPE,
    ApiArtifactoryConnectionDTO.JSON_PROPERTY_PASSWORD,
    ApiArtifactoryConnectionDTO.JSON_PROPERTY_USERNAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-26T13:18:09.990569236+02:00[Europe/Berlin]")
public class ApiArtifactoryConnectionDTO {
    public static final String JSON_PROPERTY_ARTIFACTORY_CONNECTION_ID = "artifactoryConnectionId";
    public static final String JSON_PROPERTY_BASE_URL = "baseUrl";
    public static final String JSON_PROPERTY_IS_ANONYMOUS = "isAnonymous";
    public static final String JSON_PROPERTY_OWNER_ID = "ownerId";
    public static final String JSON_PROPERTY_OWNER_TYPE = "ownerType";
    public static final String JSON_PROPERTY_PASSWORD = "password";
    public static final String JSON_PROPERTY_USERNAME = "username";
    private String artifactoryConnectionId;
    private String baseUrl;
    private Boolean isAnonymous;
    private String ownerId;
    private OwnerTypeEnum ownerType;
    private String password;
    private String username;
    public ApiArtifactoryConnectionDTO() {
    }

    public ApiArtifactoryConnectionDTO artifactoryConnectionId(String artifactoryConnectionId) {
        this.artifactoryConnectionId = artifactoryConnectionId;
        return this;
    }

    /**
     * Get artifactoryConnectionId
     *
     * @return artifactoryConnectionId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ARTIFACTORY_CONNECTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getArtifactoryConnectionId() {
        return artifactoryConnectionId;
    }

    @JsonProperty(JSON_PROPERTY_ARTIFACTORY_CONNECTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setArtifactoryConnectionId(String artifactoryConnectionId) {
        this.artifactoryConnectionId = artifactoryConnectionId;
    }

    public ApiArtifactoryConnectionDTO baseUrl(String baseUrl) {
        this.baseUrl = baseUrl;
        return this;
    }

    /**
     * Get baseUrl
     *
     * @return baseUrl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_BASE_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getBaseUrl() {
        return baseUrl;
    }

    @JsonProperty(JSON_PROPERTY_BASE_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBaseUrl(String baseUrl) {
        this.baseUrl = baseUrl;
    }

    public ApiArtifactoryConnectionDTO isAnonymous(Boolean isAnonymous) {
        this.isAnonymous = isAnonymous;
        return this;
    }

    /**
     * Get isAnonymous
     *
     * @return isAnonymous
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IS_ANONYMOUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIsAnonymous() {
        return isAnonymous;
    }

    @JsonProperty(JSON_PROPERTY_IS_ANONYMOUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIsAnonymous(Boolean isAnonymous) {
        this.isAnonymous = isAnonymous;
    }

    public ApiArtifactoryConnectionDTO ownerId(String ownerId) {
        this.ownerId = ownerId;
        return this;
    }

    /**
     * Get ownerId
     *
     * @return ownerId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_OWNER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getOwnerId() {
        return ownerId;
    }

    @JsonProperty(JSON_PROPERTY_OWNER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOwnerId(String ownerId) {
        this.ownerId = ownerId;
    }

    public ApiArtifactoryConnectionDTO ownerType(OwnerTypeEnum ownerType) {
        this.ownerType = ownerType;
        return this;
    }

    /**
     * Get ownerType
     *
     * @return ownerType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_OWNER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OwnerTypeEnum getOwnerType() {
        return ownerType;
    }

    @JsonProperty(JSON_PROPERTY_OWNER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOwnerType(OwnerTypeEnum ownerType) {
        this.ownerType = ownerType;
    }

    public ApiArtifactoryConnectionDTO password(String password) {
        this.password = password;
        return this;
    }

    /**
     * Get password
     *
     * @return password
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PASSWORD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getPassword() {
        return password;
    }

    @JsonProperty(JSON_PROPERTY_PASSWORD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPassword(String password) {
        this.password = password;
    }

    public ApiArtifactoryConnectionDTO username(String username) {
        this.username = username;
        return this;
    }

    /**
     * Get username
     *
     * @return username
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getUsername() {
        return username;
    }

    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Return true if this ApiArtifactoryConnectionDTO object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ApiArtifactoryConnectionDTO apiArtifactoryConnectionDTO = (ApiArtifactoryConnectionDTO) o;
        return Objects.equals(this.artifactoryConnectionId, apiArtifactoryConnectionDTO.artifactoryConnectionId) &&
            Objects.equals(this.baseUrl, apiArtifactoryConnectionDTO.baseUrl) &&
            Objects.equals(this.isAnonymous, apiArtifactoryConnectionDTO.isAnonymous) &&
            Objects.equals(this.ownerId, apiArtifactoryConnectionDTO.ownerId) &&
            Objects.equals(this.ownerType, apiArtifactoryConnectionDTO.ownerType) &&
            Objects.equals(this.password, apiArtifactoryConnectionDTO.password) &&
            Objects.equals(this.username, apiArtifactoryConnectionDTO.username);
    }

    @Override
    public int hashCode() {
        return Objects.hash(artifactoryConnectionId, baseUrl, isAnonymous, ownerId, ownerType, password, username);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ApiArtifactoryConnectionDTO {\n");
        sb.append("    artifactoryConnectionId: ").append(toIndentedString(artifactoryConnectionId)).append("\n");
        sb.append("    baseUrl: ").append(toIndentedString(baseUrl)).append("\n");
        sb.append("    isAnonymous: ").append(toIndentedString(isAnonymous)).append("\n");
        sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
        sb.append("    ownerType: ").append(toIndentedString(ownerType)).append("\n");
        sb.append("    password: ").append(toIndentedString(password)).append("\n");
        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets ownerType
     */
    public enum OwnerTypeEnum {
        APPLICATION("application"),

        ORGANIZATION("organization"),

        REPOSITORY_CONTAINER("repository_container"),

        REPOSITORY("repository"),

        GLOBAL("global");

        private String value;

        OwnerTypeEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static OwnerTypeEnum fromValue(String value) {
            for (OwnerTypeEnum b : OwnerTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

}

