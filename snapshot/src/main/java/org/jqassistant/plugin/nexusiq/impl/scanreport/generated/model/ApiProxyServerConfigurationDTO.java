/*
 * Sonatype IQ Server
 * This documents the available APIs into [Sonatype IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management).
 *
 * The version of the OpenAPI document: 164
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.jqassistant.plugin.nexusiq.impl.scanreport.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ApiProxyServerConfigurationDTO
 */
@JsonPropertyOrder({
    ApiProxyServerConfigurationDTO.JSON_PROPERTY_EXCLUDE_HOSTS,
    ApiProxyServerConfigurationDTO.JSON_PROPERTY_HOSTNAME,
    ApiProxyServerConfigurationDTO.JSON_PROPERTY_PASSWORD,
    ApiProxyServerConfigurationDTO.JSON_PROPERTY_PASSWORD_IS_INCLUDED,
    ApiProxyServerConfigurationDTO.JSON_PROPERTY_PORT,
    ApiProxyServerConfigurationDTO.JSON_PROPERTY_USERNAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-26T13:18:09.990569236+02:00[Europe/Berlin]")
public class ApiProxyServerConfigurationDTO {
    public static final String JSON_PROPERTY_EXCLUDE_HOSTS = "excludeHosts";
    public static final String JSON_PROPERTY_HOSTNAME = "hostname";
    public static final String JSON_PROPERTY_PASSWORD = "password";
    public static final String JSON_PROPERTY_PASSWORD_IS_INCLUDED = "passwordIsIncluded";
    public static final String JSON_PROPERTY_PORT = "port";
    public static final String JSON_PROPERTY_USERNAME = "username";
    private List<String> excludeHosts = null;
    private String hostname;
    private List<String> password = null;
    private Boolean passwordIsIncluded;
    private Integer port;
    private String username;

    public ApiProxyServerConfigurationDTO() {
    }

    public ApiProxyServerConfigurationDTO excludeHosts(List<String> excludeHosts) {
        this.excludeHosts = excludeHosts;
        return this;
    }

    public ApiProxyServerConfigurationDTO addExcludeHostsItem(String excludeHostsItem) {
        if (this.excludeHosts == null) {
            this.excludeHosts = new ArrayList<>();
        }
        this.excludeHosts.add(excludeHostsItem);
        return this;
    }

    /**
     * Get excludeHosts
     *
     * @return excludeHosts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_EXCLUDE_HOSTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getExcludeHosts() {
        return excludeHosts;
    }


    @JsonProperty(JSON_PROPERTY_EXCLUDE_HOSTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExcludeHosts(List<String> excludeHosts) {
        this.excludeHosts = excludeHosts;
    }


    public ApiProxyServerConfigurationDTO hostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * Get hostname
     *
     * @return hostname
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getHostname() {
        return hostname;
    }


    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHostname(String hostname) {
        this.hostname = hostname;
    }


    public ApiProxyServerConfigurationDTO password(List<String> password) {
        this.password = password;
        return this;
    }

    public ApiProxyServerConfigurationDTO addPasswordItem(String passwordItem) {
        if (this.password == null) {
            this.password = new ArrayList<>();
        }
        this.password.add(passwordItem);
        return this;
    }

    /**
     * Get password
     *
     * @return password
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PASSWORD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getPassword() {
        return password;
    }


    @JsonProperty(JSON_PROPERTY_PASSWORD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPassword(List<String> password) {
        this.password = password;
    }


    public ApiProxyServerConfigurationDTO passwordIsIncluded(Boolean passwordIsIncluded) {
        this.passwordIsIncluded = passwordIsIncluded;
        return this;
    }

    /**
     * Get passwordIsIncluded
     *
     * @return passwordIsIncluded
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PASSWORD_IS_INCLUDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getPasswordIsIncluded() {
        return passwordIsIncluded;
    }


    @JsonProperty(JSON_PROPERTY_PASSWORD_IS_INCLUDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPasswordIsIncluded(Boolean passwordIsIncluded) {
        this.passwordIsIncluded = passwordIsIncluded;
    }


    public ApiProxyServerConfigurationDTO port(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * Get port
     *
     * @return port
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getPort() {
        return port;
    }


    @JsonProperty(JSON_PROPERTY_PORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPort(Integer port) {
        this.port = port;
    }


    public ApiProxyServerConfigurationDTO username(String username) {
        this.username = username;
        return this;
    }

    /**
     * Get username
     *
     * @return username
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getUsername() {
        return username;
    }


    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUsername(String username) {
        this.username = username;
    }


    /**
     * Return true if this ApiProxyServerConfigurationDTO object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ApiProxyServerConfigurationDTO apiProxyServerConfigurationDTO = (ApiProxyServerConfigurationDTO) o;
        return Objects.equals(this.excludeHosts, apiProxyServerConfigurationDTO.excludeHosts) &&
            Objects.equals(this.hostname, apiProxyServerConfigurationDTO.hostname) &&
            Objects.equals(this.password, apiProxyServerConfigurationDTO.password) &&
            Objects.equals(this.passwordIsIncluded, apiProxyServerConfigurationDTO.passwordIsIncluded) &&
            Objects.equals(this.port, apiProxyServerConfigurationDTO.port) &&
            Objects.equals(this.username, apiProxyServerConfigurationDTO.username);
    }

    @Override
    public int hashCode() {
        return Objects.hash(excludeHosts, hostname, password, passwordIsIncluded, port, username);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ApiProxyServerConfigurationDTO {\n");
        sb.append("    excludeHosts: ").append(toIndentedString(excludeHosts)).append("\n");
        sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
        sb.append("    password: ").append(toIndentedString(password)).append("\n");
        sb.append("    passwordIsIncluded: ").append(toIndentedString(passwordIsIncluded)).append("\n");
        sb.append("    port: ").append(toIndentedString(port)).append("\n");
        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

