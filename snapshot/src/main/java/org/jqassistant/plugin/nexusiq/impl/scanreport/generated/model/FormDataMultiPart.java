/*
 * Sonatype IQ Server
 * This documents the available APIs into [Sonatype IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management).
 *
 * The version of the OpenAPI document: 164
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.jqassistant.plugin.nexusiq.impl.scanreport.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.*;


/**
 * FormDataMultiPart
 */
@JsonPropertyOrder({
    FormDataMultiPart.JSON_PROPERTY_BODY_PARTS,
    FormDataMultiPart.JSON_PROPERTY_CONTENT_DISPOSITION,
    FormDataMultiPart.JSON_PROPERTY_ENTITY,
    FormDataMultiPart.JSON_PROPERTY_FIELDS,
    FormDataMultiPart.JSON_PROPERTY_HEADERS,
    FormDataMultiPart.JSON_PROPERTY_MEDIA_TYPE,
    FormDataMultiPart.JSON_PROPERTY_MESSAGE_BODY_WORKERS,
    FormDataMultiPart.JSON_PROPERTY_PARAMETERIZED_HEADERS,
    FormDataMultiPart.JSON_PROPERTY_PARENT,
    FormDataMultiPart.JSON_PROPERTY_PROVIDERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-26T13:18:09.990569236+02:00[Europe/Berlin]")
public class FormDataMultiPart {
    public static final String JSON_PROPERTY_BODY_PARTS = "bodyParts";
    public static final String JSON_PROPERTY_CONTENT_DISPOSITION = "contentDisposition";
    public static final String JSON_PROPERTY_ENTITY = "entity";
    public static final String JSON_PROPERTY_FIELDS = "fields";
    public static final String JSON_PROPERTY_HEADERS = "headers";
    public static final String JSON_PROPERTY_MEDIA_TYPE = "mediaType";
    public static final String JSON_PROPERTY_MESSAGE_BODY_WORKERS = "messageBodyWorkers";
    public static final String JSON_PROPERTY_PARAMETERIZED_HEADERS = "parameterizedHeaders";
    public static final String JSON_PROPERTY_PARENT = "parent";
    public static final String JSON_PROPERTY_PROVIDERS = "providers";
    private List<BodyPart> bodyParts = null;
    private ContentDisposition contentDisposition;
    private Object entity;
    private Map<String, List<FormDataBodyPart>> fields = null;
    private Map<String, List<String>> headers = null;
    private BodyPartMediaType mediaType;
    private Object messageBodyWorkers;
    private Map<String, List<ParameterizedHeader>> parameterizedHeaders = null;
    private MultiPart parent;
    private Object providers;

    public FormDataMultiPart() {
    }

    public FormDataMultiPart bodyParts(List<BodyPart> bodyParts) {
        this.bodyParts = bodyParts;
        return this;
    }

    public FormDataMultiPart addBodyPartsItem(BodyPart bodyPartsItem) {
        if (this.bodyParts == null) {
            this.bodyParts = new ArrayList<>();
        }
        this.bodyParts.add(bodyPartsItem);
        return this;
    }

    /**
     * Get bodyParts
     *
     * @return bodyParts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_BODY_PARTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<BodyPart> getBodyParts() {
        return bodyParts;
    }


    @JsonProperty(JSON_PROPERTY_BODY_PARTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBodyParts(List<BodyPart> bodyParts) {
        this.bodyParts = bodyParts;
    }


    public FormDataMultiPart contentDisposition(ContentDisposition contentDisposition) {
        this.contentDisposition = contentDisposition;
        return this;
    }

    /**
     * Get contentDisposition
     *
     * @return contentDisposition
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CONTENT_DISPOSITION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ContentDisposition getContentDisposition() {
        return contentDisposition;
    }


    @JsonProperty(JSON_PROPERTY_CONTENT_DISPOSITION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setContentDisposition(ContentDisposition contentDisposition) {
        this.contentDisposition = contentDisposition;
    }


    public FormDataMultiPart entity(Object entity) {
        this.entity = entity;
        return this;
    }

    /**
     * Get entity
     *
     * @return entity
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ENTITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getEntity() {
        return entity;
    }


    @JsonProperty(JSON_PROPERTY_ENTITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEntity(Object entity) {
        this.entity = entity;
    }


    public FormDataMultiPart fields(Map<String, List<FormDataBodyPart>> fields) {
        this.fields = fields;
        return this;
    }

    public FormDataMultiPart putFieldsItem(String key, List<FormDataBodyPart> fieldsItem) {
        if (this.fields == null) {
            this.fields = new HashMap<>();
        }
        this.fields.put(key, fieldsItem);
        return this;
    }

    /**
     * Get fields
     *
     * @return fields
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_FIELDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, List<FormDataBodyPart>> getFields() {
        return fields;
    }


    @JsonProperty(JSON_PROPERTY_FIELDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFields(Map<String, List<FormDataBodyPart>> fields) {
        this.fields = fields;
    }


    public FormDataMultiPart headers(Map<String, List<String>> headers) {
        this.headers = headers;
        return this;
    }

    public FormDataMultiPart putHeadersItem(String key, List<String> headersItem) {
        if (this.headers == null) {
            this.headers = new HashMap<>();
        }
        this.headers.put(key, headersItem);
        return this;
    }

    /**
     * Get headers
     *
     * @return headers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_HEADERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, List<String>> getHeaders() {
        return headers;
    }


    @JsonProperty(JSON_PROPERTY_HEADERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHeaders(Map<String, List<String>> headers) {
        this.headers = headers;
    }


    public FormDataMultiPart mediaType(BodyPartMediaType mediaType) {
        this.mediaType = mediaType;
        return this;
    }

    /**
     * Get mediaType
     *
     * @return mediaType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MEDIA_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BodyPartMediaType getMediaType() {
        return mediaType;
    }


    @JsonProperty(JSON_PROPERTY_MEDIA_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMediaType(BodyPartMediaType mediaType) {
        this.mediaType = mediaType;
    }


    public FormDataMultiPart messageBodyWorkers(Object messageBodyWorkers) {
        this.messageBodyWorkers = messageBodyWorkers;
        return this;
    }

    /**
     * Get messageBodyWorkers
     *
     * @return messageBodyWorkers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MESSAGE_BODY_WORKERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getMessageBodyWorkers() {
        return messageBodyWorkers;
    }


    @JsonProperty(JSON_PROPERTY_MESSAGE_BODY_WORKERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMessageBodyWorkers(Object messageBodyWorkers) {
        this.messageBodyWorkers = messageBodyWorkers;
    }


    public FormDataMultiPart parameterizedHeaders(Map<String, List<ParameterizedHeader>> parameterizedHeaders) {
        this.parameterizedHeaders = parameterizedHeaders;
        return this;
    }

    public FormDataMultiPart putParameterizedHeadersItem(String key, List<ParameterizedHeader> parameterizedHeadersItem) {
        if (this.parameterizedHeaders == null) {
            this.parameterizedHeaders = new HashMap<>();
        }
        this.parameterizedHeaders.put(key, parameterizedHeadersItem);
        return this;
    }

    /**
     * Get parameterizedHeaders
     *
     * @return parameterizedHeaders
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PARAMETERIZED_HEADERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, List<ParameterizedHeader>> getParameterizedHeaders() {
        return parameterizedHeaders;
    }


    @JsonProperty(JSON_PROPERTY_PARAMETERIZED_HEADERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setParameterizedHeaders(Map<String, List<ParameterizedHeader>> parameterizedHeaders) {
        this.parameterizedHeaders = parameterizedHeaders;
    }


    public FormDataMultiPart parent(MultiPart parent) {
        this.parent = parent;
        return this;
    }

    /**
     * Get parent
     *
     * @return parent
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PARENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public MultiPart getParent() {
        return parent;
    }


    @JsonProperty(JSON_PROPERTY_PARENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setParent(MultiPart parent) {
        this.parent = parent;
    }


    public FormDataMultiPart providers(Object providers) {
        this.providers = providers;
        return this;
    }

    /**
     * Get providers
     *
     * @return providers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PROVIDERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getProviders() {
        return providers;
    }


    @JsonProperty(JSON_PROPERTY_PROVIDERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProviders(Object providers) {
        this.providers = providers;
    }


    /**
     * Return true if this FormDataMultiPart object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FormDataMultiPart formDataMultiPart = (FormDataMultiPart) o;
        return Objects.equals(this.bodyParts, formDataMultiPart.bodyParts) &&
            Objects.equals(this.contentDisposition, formDataMultiPart.contentDisposition) &&
            Objects.equals(this.entity, formDataMultiPart.entity) &&
            Objects.equals(this.fields, formDataMultiPart.fields) &&
            Objects.equals(this.headers, formDataMultiPart.headers) &&
            Objects.equals(this.mediaType, formDataMultiPart.mediaType) &&
            Objects.equals(this.messageBodyWorkers, formDataMultiPart.messageBodyWorkers) &&
            Objects.equals(this.parameterizedHeaders, formDataMultiPart.parameterizedHeaders) &&
            Objects.equals(this.parent, formDataMultiPart.parent) &&
            Objects.equals(this.providers, formDataMultiPart.providers);
    }

    @Override
    public int hashCode() {
        return Objects.hash(bodyParts, contentDisposition, entity, fields, headers, mediaType, messageBodyWorkers, parameterizedHeaders, parent, providers);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FormDataMultiPart {\n");
        sb.append("    bodyParts: ").append(toIndentedString(bodyParts)).append("\n");
        sb.append("    contentDisposition: ").append(toIndentedString(contentDisposition)).append("\n");
        sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
        sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
        sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
        sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
        sb.append("    messageBodyWorkers: ").append(toIndentedString(messageBodyWorkers)).append("\n");
        sb.append("    parameterizedHeaders: ").append(toIndentedString(parameterizedHeaders)).append("\n");
        sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
        sb.append("    providers: ").append(toIndentedString(providers)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

